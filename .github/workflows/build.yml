name: Build binaries and Upload to Release

on:
  push:
    branches: [ main ]
    paths:
      - "version"
  workflow_dispatch: {}

jobs:
  linux-build:
    runs-on: ubuntu-22.04
    steps:
      
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        submodules: recursive
      
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18
      
    - name: Cache NDK
      id: cache-ndk
      uses: actions/cache@v3
      with:
        key: android-ndk-r20b-cache
        path: ~/android-ndk-r20b
      
    - name: Set up NDK
      if: steps.cache-ndk.outputs.cache-hit != 'true'
      uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: r20b
        add-to-path: false
      
    - name: Move NDK
      if: steps.cache-ndk.outputs.cache-hit != 'true'
      run: mv ${{ steps.setup-ndk.outputs.ndk-path }} ${HOME}/android-ndk-r20b
      
    - name: Install compilers
      run: |
        sudo apt update
        sudo apt install gcc-mingw-w64-i686 gcc-mingw-w64-x86-64 gcc gcc-aarch64-linux-gnu libgl1-mesa-dev xorg-dev -y
      
#    - name: Setup LLVM dependencies
#      run: |
#        sudo apt install libedit2 libxml2 libncursesw6 binutils elfutils
#        wget -q http://ftp.debian.org/debian/pool/main/libf/libffi/libffi8_3.4.4-1_amd64.deb
#        sudo dpkg -i libffi8_3.4.4-1_amd64.deb
#    - name: Cache LLVM
#      id: cache-llvm
#      uses: actions/cache@v3
#      with:
#        key: llvm-cache
#        path: ~/llvm
#    - name: Download LLVM
#      if: steps.cache-llvm.outputs.cache-hit != 'true'
#      run: |
#        wget -q https://github.com/Torrekie/homebrew-core/releases/download/LLVM-14.0.6/llvm.tar.xz
#        tar xf llvm.tar.xz
#        rm llvm.tar.xz
#        mv llvm/14.0.6 ~/llvm
    - name: Set build time
      id: build_time
      run: echo "build_time=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
    - name: Pre-Build & configure go-raknet
      run: |
        make current
        make clean
        chmod 0644 ~/go/pkg/mod/github.com/sandertv/go-raknet@v1.9.1/conn.go
        sed "s/urrentProtocol byte = 10/urrentProtocol byte = 8/g" ~/go/pkg/mod/github.com/sandertv/go-raknet@v1.9.1/conn.go>~/conn.go
        cp -f ~/conn.go ~/go/pkg/mod/github.com/sandertv/go-raknet@v1.9.1/conn.go
    - name: Build
      run: |
        export THEOS=~/theos
        make all
    - name: Package for specific platforms
      run: |
        export THEOS=~/theos
        make package
    - name: Archive binaries
      run: |
        mv release/*.deb build/
        ls -lh build/>release.txt
        mv release.txt build/release-list.txt
        cp version build/version.txt
        cp install.sh build/install.sh
    - name: Provide release version
      id: release_version
      run: echo "release_version=$(cat build/version)"  >> $GITHUB_OUTPUT
    - name: Release
      uses: softprops/action-gh-release@v0.1.14
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: Canary${{ steps.release_version.outputs.release_version }}
        files: |
          build/*
